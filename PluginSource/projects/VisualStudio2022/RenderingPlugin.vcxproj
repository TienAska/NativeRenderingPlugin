<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\source\Optix\Exception.h" />
    <ClInclude Include="..\..\source\Optix\RayTracing_Optix7.h" />
    <ClInclude Include="..\..\source\RenderAPI.h" />
    <ClInclude Include="..\..\source\Unity\IUnityGraphics.h" />
    <ClInclude Include="..\..\source\Unity\IUnityInterface.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\source\RenderAPI.cpp" />
    <ClCompile Include="..\..\source\RenderAPI_OpenGLCoreES.cpp" />
    <ClCompile Include="..\..\source\RenderingPlugin.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\source\Optix\draw_solid_color.cu">
      <FileType>Document</FileType>
    </CustomBuild>
    <None Include="..\..\source\RenderingPlugin.def" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{F7CFEF5A-54BD-42E8-A59E-54ABAEB4EA9C}</ProjectGuid>
    <RootNamespace>RenderingPlugin</RootNamespace>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>12.0.30501.0</_ProjectFileVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)..\..\build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)..\..\build\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)..\..\build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)..\..\build\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>GLEW_STATIC;WIN32;_DEBUG;_WINDOWS;_USRDLL;RENDERINGPLUGIN_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>../../;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6\include</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalDependencies>opengl32.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6\lib\x64\cudart_static.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.6\lib\x64\nvrtc.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <ModuleDefinitionFile>../../source/RenderingPlugin.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>SETLOCAL

if "$(PlatformShortName)" == "x86" (
  set TARGET_PLUGIN_PATH=$(SolutionDir)..\..\..\UnityProject\Assets\Plugins\x86
) else (
  set TARGET_PLUGIN_PATH=$(SolutionDir)..\..\..\UnityProject\Assets\Plugins\x86_64
)
echo Target Plugin Path is %TARGET_PLUGIN_PATH%
copy /Y "$(TargetPath)" "%TARGET_PLUGIN_PATH%\$(TargetFileName)"

ENDLOCAL
</Command>
    </PostBuildEvent>
    <CustomBuild>
      <AdditionalInputs>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\sm_70_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\sm_70_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\sm_80_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\crt\sm_80_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\cuda_surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\cuda_texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\library_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_60_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_60_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_61_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\sm_61_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\surface_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\texture_fetch_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include\vector_types.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\SDK\cuda\helpers.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\SDK\optixTriangle\optixTriangle.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\SDK\sutil\Preprocessor.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\SDK\sutil\vec_math.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include\internal\optix_7_device_impl.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include\internal\optix_7_device_impl_exception.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include\internal\optix_7_device_impl_transformations.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include\optix.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include\optix_7_device.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include\optix_7_types.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include\optix_device.h;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\SDK\build\optixTriangle\CMakeFiles\optixTriangle.dir\optixTriangle_generated_optixTriangle.cu.ptx.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Command>nvcc -ptx -I "C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\include" -I "C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.4.0\SDK" --use_fast_math ../../source/Optix/%(Filename).cu -o $(OutputPath)%(Filename).ptx</Command>
      <Message>NVCC compiling cu file...</Message>
      <Outputs>$(OutputPath)%(Filename).ptx</Outputs>
    </CustomBuild>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>GLEW_STATIC;WIN32;NDEBUG;_WINDOWS;_USRDLL;RENDERINGPLUGIN_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>../../</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalDependencies>opengl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <ModuleDefinitionFile>../../source/RenderingPlugin.def</ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>SETLOCAL

if "$(PlatformShortName)" == "x86" (
  set TARGET_PLUGIN_PATH=$(SolutionDir)..\..\..\UnityProject\Assets\Plugins\x86
) else (
  set TARGET_PLUGIN_PATH=$(SolutionDir)..\..\..\UnityProject\Assets\Plugins\x86_64
)
echo Target Plugin Path is %TARGET_PLUGIN_PATH%
copy /Y "$(TargetPath)" "%TARGET_PLUGIN_PATH%\$(TargetFileName)"

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>